# -*- coding: utf-8 -*-
"""ProyectoFinal_Grupo13.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/13ggm5Q42KxrMcfEIdnH_wwcDwApQqzuT
"""

#Paradigma procedural
from bs4 import BeautifulSoup
import requests
import pandas as pd
import csv
import time
from datetime import date
from datetime import datetime
from math import ceil
from clases import medicamento
from os import system
def to_csv(lista):
    name="parametros.csv"
    archivo2 = open(name,"w")

    name="medicamentos.csv"
    with open(name,"w",newline='') as file:
        writer = csv.writer(file, delimiter=';')
        writer.writerows(lista)

def UF():
    url="https://www.bcentral.cl/inicio"
    page= requests.get(url)
    soup= BeautifulSoup(page.content,"html.parser")
    uf=soup.find("p",class_="basic-text fs-2 f-opensans-bold text-center c-blue-nb-2")
    fecha=soup.find("p",class_="basic-text f-opensans-semibold c-beige-nb-1 fs-1 mb-1 text-center text-lg-left")
    uf=uf.text[1:]
    uftemp=""
    for i in uf:
        if i==".":
            continue
        if i==",":
            uftemp+="."
            continue
        uftemp+=i
    uf=uftemp
    print(uf)

    print(fecha.text)
    
    lista=[[fecha.text,uf]]
    #Poner los datos en el CSV
    return uf

def principios_activos():
    lista_med=[]
    with open('principios_activos.txt', 'r', encoding='utf8') as fichero:
        lista = fichero.readlines()
    for i in lista:
        if i[-1:]=="\n":
            lista_med.append(str(i[:-1]))
        else:
            lista_med.append(i)
    return lista_med

def drsimi(lista,uf,general,medicamentos):
    
    precios=[]
    descripciones=[]
    nombres=[]
    preciosufs=[]
    farmacia="DrSimi"
    for med in lista:
    
        url="https://www.drsimi.cl/catalogsearch/result/?q="+med
        page= requests.get(url)
        soup= BeautifulSoup(page.content,"html.parser")
       
        
        if (soup.find("ul",class_="items pages-items")==None):
          cantidad=1
        else:
          box0= soup.find("ul",class_="items pages-items")
          page=[]
          for pag in box0.find_all(class_="page"):
              page.append(pag)
          cantidad=len(page)
        paginas=cantidad
        
        

        for i in range(1,paginas+1):
            
            url="https://www.drsimi.cl/catalogsearch/result/index/?p="+str(i)+"&q="+med
            page= requests.get(url)
            soup= BeautifulSoup(page.content,"html.parser")

            box= soup.find("ol",class_="filterproducts products list items product-items ")
            cantidadPagina=""
            linkProducto=[]
            for link in soup.find_all("a",class_="product-item-link"):
                linkProducto.append(link['href'])

            for j in range (0,len(linkProducto),1):
              nombre=""
              descripcion=""
              precio=""
              prec=""
              
  
              
              url2=linkProducto[j]
              page2= requests.get(url2)
              soup2= BeautifulSoup(page2.content,"html.parser")
              box2= soup2.find("div",class_="product-info-main")

              #Nombre
              if box2.find("h6",class_="marca-prod")==None:
                #el nombre no se pudo obtener, descartamos el producto
                continue
              else:
                nombre=box2.find("h6",class_="marca-prod").string
              
              
              #Descripcion
              if box2.find("span",class_="base")==None:
                #la descripcion no se pudo obtener, descartamos el producto
                continue
              else:
                descripcion=box2.find("span",class_="base").string
              

              #Precio
              if box2.find("span",class_="price")==None:
              #el precio no se pudo obtener, descartamos el producto
                continue
              else:
                prec=box2.find("span",class_="price").string
              

            
              for i in prec:
                  if i=="$": 
                      continue  
                  elif i==".":
                      continue
                  precio+=str(i)
              
              #Appends             
              precio=int(precio.strip())
              precios.append(precio)



              nombres.append(nombre)
              descripciones.append(descripcion)
              
              preciosufs.append(round(precio/uf,2))
              """
              print("Nombres:\n",nombres)
              print("Descripciones:\n",descripciones)
              print("Precios:\n",precios)
              print("Precios en uf:\n",preciosufs)

              print(len(nombres),"n----------------")
              print(len(descripciones),"d----------------")
              print(len(precios),"p----------------")
              """

    for i in range(len(nombres)):
        temp=[nombres[i],farmacia,descripciones[i],precios[i],preciosufs[i]]
        general.append(temp)
        medi=medicamento(nombres[i],farmacia,descripciones[i],precios[i],preciosufs[i])
        medicamentos.append(medi)

       
    return general, medicamentos


def ahumada(lista,uf,general,medicamentos):
    count=0
    precios=[]
    descripciones=[]
    nombres=[] 
    preciosufs=[]
    for med in lista:
    
        url="https://www.farmaciasahumada.cl/catalogsearch/result/index/?p=10000&q="+med
        page= requests.get(url)
        soup= BeautifulSoup(page.content,"html.parser")
        #left-search-count
        cant=soup.find("span",class_="left-search-count") 

        cantidad=""
        for i in cant.text:
           
            if i=="P" or i=="p":
                break
            cantidad+=i
        cantidad=int(cantidad.strip())
        if cantidad!=0:
            paginas=ceil(cantidad/12)
        else:
            paginas=0
        #print(paginas)
        #aqui hay que sacar la cantidad de pÃ¡gina
        #paginas=2
        for i in range(1,paginas+1):
            url="https://www.farmaciasahumada.cl/catalogsearch/result/index/?p="+str(i)+"&q="+med
            page= requests.get(url)
            soup= BeautifulSoup(page.content,"html.parser")
            nombre=soup.findAll("p",class_="product-brand-name truncate")
            precio=soup.findAll("span",class_="price-container price-final_price tax weee")
            farmacia="Ahumada"
            descripcion=soup.findAll("strong",class_="product name product-item-name truncate")

          
            for a in descripcion:
                descripciones.append(a.text.strip())
            for nom in nombre:
                nombres.append(nom.text.strip())
            
            
            # for nom in nombre:
                
            #     print(nom.text)
           
            
            for pre in precio:
                prec=""
                es=0
                for i in pre.text:
                    if i=="$":
                        es=1 
                        continue  
                    if es==1:
                        if i==".":
                            continue
                        if i=="":
                            break
                        prec+=str(i)
                        
                           
                prec=int(prec.strip())
                precios.append(prec)
                preciosufs.append(round(prec/uf,2))   
            
    # count+=1
    
    # print(len(nombres),"n----------------")
    # print(len(descripciones),"d----------------")
    # print(len(precios),"p----------------")

    for i in range(len(nombres)):
        temp=[nombres[i],farmacia,descripciones[i],precios[i],preciosufs[i]]
        general.append(temp)
        medi=medicamento(nombres[i],farmacia,descripciones[i],precios[i],preciosufs[i])
        medicamentos.append(medi)

        # if count>0:
        #     break
    
    return general, medicamentos


def farmachile(lista, uf, general,medicamentos):
    count=0
    precios=[]
    descripciones=[]
    nombres=[]
    preciosufs=[]
    farmacia="farmacias chile"
    for med in lista:

        url= "https://www.farmaciaschilespa.cl/?s="+med
        page= requests.get(url)
        soup= BeautifulSoup(page.content, "html.parser")
        cant= soup.find("h1", class_="title")
        cantidad=""
        for i in cant.text:
           
            if i=="r" or i=="R":
                break
            cantidad+=i
        cantidad=int(cantidad.strip())
        if cantidad!=0:
            paginas=ceil(cantidad/4)
        else:
            paginas=0
       
      
        #paginas=1
        for i in range(1, paginas+1):
            url="https://www.farmaciaschilespa.cl/page/"+str(i)+"/?s="+med
            page= requests.get(url)
            soup= BeautifulSoup(page.content, "html.parser")
            nombre= soup.findAll("div", class_="post-title")
            precio= soup.findAll("div", class_="post-product-price")
            farmacia= "FarmaciasChile"
            descripcion= soup.findAll("div", class_="post-excerpt")
            
            for a in descripcion:
                descripciones.append(a.text.strip())
                #print(a.text.strip())
            for nom in nombre:
                nombres.append(nom.text.strip())
                #print(nom.text.strip())
            for pre in precio:
                prec=""
                es=0
                for i in pre.text:
                    if i=="C":
                        
                        break
                    prec+=str(i)
                prec=int(prec.strip())
                precios.append(prec)
                preciosufs.append(round(prec/uf, 2))



    for i in range(len(nombres)):
      temp=[nombres[i], farmacia, descripciones[i], precios[i], preciosufs[i]]
      general.append(temp)
      medi=medicamento(nombres[i], farmacia, descripciones[i], precios[i], preciosufs[i])
      medicamentos.append(medi)
    
    return general,medicamentos

def main():
    total_medicamentos=[]
    medicamentos_clases=[]
    uf=float(UF())
    lista_medicamentos=principios_activos()
    total_medicamentos,medicamentos_clases=ahumada(lista_medicamentos,uf,total_medicamentos, medicamentos_clases)
    total_medicamentos,medicamentos_clases=farmachile(lista_medicamentos,uf,total_medicamentos, medicamentos_clases)
    try:
        total_medicamentos,medicamentos_clases=drsimi(lista_medicamentos,uf,total_medicamentos, medicamentos_clases)
    except:
        pass

    to_csv(total_medicamentos)
    df = pd.read_csv('medicamentos.csv',sep= ";",names = ["Nombre","Farmacia","Descripcion","precio","precio uf"],encoding='latin-1')
    #display(df)

    system("cls")
    print("Precio min en Farmacia Ahumada: ",df["precio"][df['Farmacia'] == "Ahumada"].min())
    print("Precio min en Farmacias Chile: ",df["precio"][df['Farmacia'] == "FarmaciasChile"].min())
    print("Precio max en Farmacia Ahumada: ",df["precio"][df['Farmacia'] == "Ahumada"].max())
    print("Precio max en Farmacias Chile: ",df["precio"][df['Farmacia'] == "FarmaciasChile"].max())
    print("Precio medio en Farmacia Ahumada: ",df["precio"][df['Farmacia'] == "Ahumada"].mean())
    print("Precio medio en Farmacias Chile: ",df["precio"][df['Farmacia'] == "FarmaciasChile"].mean())
    print("DesviasiÃ³n estandar Precio en Farmacia Ahumada: ",df["precio"][df['Farmacia'] == "Ahumada"].std())
    print("DesviasiÃ³n estandar Precio en Farmacias Chile: ",df["precio"][df['Farmacia'] == "FarmaciasChile"].std())
    print("Productos en Farmacia Ahumada: ",df["precio"][df['Farmacia'] == "Ahumada"].std())
    print("Productos Farmacias Chile: ",df["precio"][df['Farmacia'] == "FarmaciasChile"].count())
    print("Precio min en Dr. Simi: ",df["precio"][df['Farmacia'] == "DrSimi"].min())
    print("Precio max en Dr. Simi: ",df["precio"][df['Farmacia'] == "DrSimi"].max())
    print("Precio medio en Dr. Simi: ",df["precio"][df['Farmacia'] == "DrSimi"].mean())
    print("DesviasiÃ³n estandar Precio en Dr. Simi: ",df["precio"][df['Farmacia'] == "DrSimi"].std())
    print("Productos en Dr. Simi: ",df["precio"][df['Farmacia'] == "DrSimi"].std())
   

    #Paradigma Funcional
    mayor=list(filter( lambda x: x.precio > 10000, medicamentos_clases))
    print("10 medicamentos con un precio mayor a 10.000 son:")
    count=0

    for i in mayor:
        count+=1
        print(i.principio_activo, " ! ",i.precio, " ! ",i.farmacia,end="|||")
        if count>10:
            break
    print("")
   # print(df["precio"].max())
    #print(df["precio"].mean())
    #print(df["precio"].std())
    #print(df["precio"].count())



if __name__== "__main__": 
    main()